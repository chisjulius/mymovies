[{"C:\\Users\\oat techs\\movie-gallery\\src\\index.js":"1","C:\\Users\\oat techs\\movie-gallery\\src\\reportWebVitals.js":"2","C:\\Users\\oat techs\\movie-gallery\\src\\App.js":"3","C:\\Users\\oat techs\\movie-gallery\\src\\components\\Moviegallery.js":"4","C:\\Users\\oat techs\\movie-gallery\\src\\components\\Navbar.js":"5","C:\\Users\\oat techs\\movie-gallery\\src\\components\\Movie.js":"6","C:\\Users\\oat techs\\movie-gallery\\src\\components\\Popular.js":"7","C:\\Users\\oat techs\\movie-gallery\\src\\components\\Toprated.js":"8","C:\\Users\\oat techs\\movie-gallery\\src\\components\\Upcoming.js":"9","C:\\Users\\oat techs\\movie-gallery\\src\\components\\Footer.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":197,"mtime":1607468148641,"results":"14","hashOfConfig":"12"},{"size":851,"mtime":1607718208205,"results":"15","hashOfConfig":"12"},{"size":1499,"mtime":1607719609151,"results":"16","hashOfConfig":"12"},{"size":1229,"mtime":1607642451661,"results":"17","hashOfConfig":"12"},{"size":3013,"mtime":1607717537991,"results":"18","hashOfConfig":"12"},{"size":3012,"mtime":1607717710951,"results":"19","hashOfConfig":"12"},{"size":2989,"mtime":1607717833655,"results":"20","hashOfConfig":"12"},{"size":1511,"mtime":1607648273421,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"v469n0",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"C:\\Users\\oat techs\\movie-gallery\\src\\index.js",[],["48","49"],"C:\\Users\\oat techs\\movie-gallery\\src\\reportWebVitals.js",[],"C:\\Users\\oat techs\\movie-gallery\\src\\App.js",[],"C:\\Users\\oat techs\\movie-gallery\\src\\components\\Moviegallery.js",[],"C:\\Users\\oat techs\\movie-gallery\\src\\components\\Navbar.js",[],"C:\\Users\\oat techs\\movie-gallery\\src\\components\\Movie.js",[],"C:\\Users\\oat techs\\movie-gallery\\src\\components\\Popular.js",["50"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst Popular_API = \"https://api.themoviedb.org/3/movie/popular?&api_key=a87b0d8312b2607eead7733f9b32be5e\"\r\nconst Search_API  = \"https://api.themoviedb.org/3/search/movie?&api_key=a87b0d8312b2607eead7733f9b32be5e&query=\"\r\nconst img_API =\"https://image.tmdb.org/t/p/w500\" \r\n\r\nconst Popular =() =>{\r\n    const [movies, setMovies] = useState([])\r\n    const [searchTerm, setSearchTerm] = useState(\"\")\r\n\r\n    const getMovies = (API) => {\r\n        axios.get(API)\r\n        .then(res=>{\r\n            setMovies(res.data.results.slice(0,4))\r\n            console.log(res)\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        getMovies(Popular_API)\r\n    },[])\r\n\r\n    const handleChange =(e) =>{\r\n        setSearchTerm(e.target.value)\r\n    }\r\n\r\n     const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(searchTerm){\r\n            getMovies(Search_API + searchTerm);\r\n\r\n            setSearchTerm(\"\");\r\n        }\r\n    };\r\n\r\n     const setVoteClass = (vote) =>{\r\n         if (vote >= 8){\r\n             return \"green\"\r\n         } else if (vote >= 6){\r\n               return \"purple\"\r\n        } else{\r\n               return \"red\"\r\n        }  \r\n     }\r\n\r\n\r\n\r\n\r\n\r\n    const movieList = movies.length ?( \r\n        movies.map(movie=>(\r\n            <div className=\"col s12 l6\">\r\n                <div className=\"card \" key={movie.id}>\r\n                    <div \r\n                    className=\"card-image\">\r\n                        <img className=\"img\" src={img_API + movie.poster_path} alt=\"movie image\"/>\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                       <p className=\"title blue-text text-darken-4\">Title: {movie.title}</p>\r\n                       <p>Release date: {movie.release_date}</p>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <Link to=\"#\" className={setVoteClass(movie.vote_average) + \"-text\"} >{movie.vote_average}</Link>\r\n                        <Link to={\"/\" + movie.id} >read more</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         ) )\r\n    ) :(<div className=\"col s12\">\r\n          <h4 className=\"center white-text\">No movies yet</h4>\r\n       </div>\r\n      )\r\n\r\n    return (\r\n        <div className=\"container movies\">\r\n            <div className=\"row\">\r\n                <div className=\"col s12 l6 xl4 offset-l3 offset-xl4\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"input-field\">\r\n                            <input className=\"white-text\" onChange ={handleChange} type=\"text\"  id=\"search\" value={searchTerm}/>\r\n                            <label htmlFor=\"search\">Search movie</label>    \r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                {movieList}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Popular\r\n  ","C:\\Users\\oat techs\\movie-gallery\\src\\components\\Toprated.js",["51","52"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport {Link, NavLink} from 'react-router-dom'\r\n\r\n\r\nconst Toprated_API = \"https://api.themoviedb.org/3/movie/top_rated?&api_key=a87b0d8312b2607eead7733f9b32be5e\"\r\nconst Search_API  = \"https://api.themoviedb.org/3/search/movie?&api_key=a87b0d8312b2607eead7733f9b32be5e&query=\"\r\nconst img_API =\"https://image.tmdb.org/t/p/w500\" \r\n\r\nconst Toprated =() =>{\r\n    const [movies, setMovies] = useState([])\r\n    const [searchTerm, setSearchTerm] = useState(\"\")\r\n\r\n    const getMovies = (API) => {\r\n        axios.get(API)\r\n        .then(res=>{\r\n            setMovies(res.data.results.slice(0,4))\r\n            console.log(res)\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        getMovies(Toprated_API)\r\n    },[])\r\n\r\n    const handleChange =(e) =>{\r\n        setSearchTerm(e.target.value)\r\n    }\r\n\r\n     const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(searchTerm){\r\n            getMovies(Search_API + searchTerm);\r\n\r\n            setSearchTerm(\"\");\r\n        }\r\n    };\r\n\r\n\r\n    const setVoteClass = (vote) =>{\r\n        if (vote >= 8){\r\n            return \"green\"\r\n        } else if (vote >= 6){\r\n              return \"purple\"\r\n       } else{\r\n              return \"red\"\r\n       }  \r\n    }\r\n\r\n\r\n\r\n\r\n    const movieList = movies.length ?( \r\n        movies.map(movie=>(\r\n            <div className=\"col s12 l6\">\r\n                <div className=\"card \" key={movie.id}>\r\n                    <div \r\n                    className=\"card-image\">\r\n                        <img className=\"img\" src={img_API + movie.poster_path} alt=\"movie image\"/>\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                       <p className=\"title blue-text text-darken-4\">Title: {movie.title}</p> \r\n                       <p>Release date: {movie.release_date}</p>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <Link to=\"#\" className={setVoteClass(movie.vote_average) + \"-text\"}>{movie.vote_average}</Link>\r\n                        <Link to={\"/\" + movie.id} >read more</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         ) )\r\n    ) :(<div className=\"col s12\">\r\n          <h4 className=\"center white-text\">No movies yet</h4>\r\n       </div>\r\n      )\r\n\r\n    return (\r\n        <div className=\"container movies\">\r\n            <div className=\"row\">\r\n                <div className=\"col s12 l6 xl4 offset-l3 offset-xl4\">\r\n                    <form onSubmit={handleSubmit}>\r\n                       <div className=\"input-field\">\r\n                          <input className=\"white-text\" onChange ={handleChange} type=\"text\"  id=\"search\" value={searchTerm}/>\r\n                          <label htmlFor=\"search\">Search movie</label>    \r\n                      </div>\r\n                    </form>\r\n                </div>\r\n                {movieList}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toprated\r\n  ",["53","54"],"C:\\Users\\oat techs\\movie-gallery\\src\\components\\Upcoming.js",["55","56"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport {Link, NavLink} from 'react-router-dom'\r\n\r\nconst Upcoming_API =  \"https://api.themoviedb.org/3/movie/upcoming?&api_key=a87b0d8312b2607eead7733f9b32be5e\"\r\nconst Search_API  = \"https://api.themoviedb.org/3/search/movie?&api_key=a87b0d8312b2607eead7733f9b32be5e&query=\"\r\nconst img_API =\"https://image.tmdb.org/t/p/w500\" \r\n\r\nconst Upcoming =() =>{\r\n    const [movies, setMovies] = useState([])\r\n    const [searchTerm, setSearchTerm] = useState(\"\")\r\n\r\n    const getMovies = (API) => {\r\n        axios.get(API)\r\n        .then(res=>{\r\n            setMovies(res.data.results.slice(0,4))\r\n            console.log(res)\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        getMovies(Upcoming_API)\r\n    },[])\r\n\r\n    const handleChange =(e) =>{\r\n        setSearchTerm(e.target.value)\r\n    }\r\n\r\n     const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(searchTerm){\r\n            getMovies(Search_API + searchTerm);\r\n\r\n            setSearchTerm(\"\");\r\n        }\r\n    };\r\n\r\n\r\n    const setVoteClass = (vote) =>{\r\n        if (vote >= 8){\r\n            return \"green\"\r\n        } else if (vote >= 6){\r\n              return \"purple\"\r\n       } else{\r\n              return \"red\"\r\n       }  \r\n    }\r\n\r\n\r\n\r\n\r\n    const movieList = movies.length ?( \r\n        movies.map(movie=>(\r\n            <div className=\"col s12 l6\">\r\n                <div className=\"card \" key={movie.id}>\r\n                    <div className=\"card-image\">\r\n                        <img className=\"img\" src={img_API + movie.poster_path} alt=\"movie image\"/>\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                       <p className=\"title blue-text text-darken-4\">Title: {movie.title}</p>\r\n                       <p>Release date: {movie.release_date}</p>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <Link to=\"#\"  className={setVoteClass(movie.vote_average) + \"-text\"} >{movie.vote_average}</Link>\r\n                        <Link to={\"/\" + movie.id} >read more</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         ) )\r\n    ) :(<div className=\"col s12\">\r\n          <h4 className=\"center white-text\">No movies yet</h4>\r\n       </div>\r\n      )\r\n\r\n    return (\r\n        <div className=\"container movies\">\r\n            <div className=\"row\">\r\n                <div className=\"col s12 l6 xl4 offset-l3 offset-xl4\">\r\n                    <form onSubmit={handleSubmit}>\r\n                       <div className=\"input-field\">\r\n                          <input className=\"white-text\" onChange ={handleChange} type=\"text\"  id=\"search\" value={searchTerm}/>\r\n                          <label htmlFor=\"search\">Search movie</label>    \r\n                      </div>\r\n                    </form>\r\n                </div>\r\n                {movieList}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Upcoming\r\n  ","C:\\Users\\oat techs\\movie-gallery\\src\\components\\Footer.js",["57","58","59"],"import React from 'react'\r\n\r\nconst Footer = () =>{\r\n    return (\r\n        <div>\r\n             <footer className=\"page-footer grey darken-3\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col s12 l6  scrollspy\">\r\n                                <h5>About</h5>\r\n                                <p>\"Lorem ipsum dolor sit amet consectetur adipisicing elit. vel, repellendus!\"</p>\r\n                                <p>\"Lorem ipsum dolor sit amet consectetur adipisicing elit. vel, repellendus!\"</p>\r\n                            </div>\r\n                            <div className=\"col s12 l4 offset-l2\">\r\n                                <h5>Connect</h5>\r\n                                <ul>\r\n                                    <li><a href=\"#\" className=\"grey-text text-lighten-3\">Facebook</a></li>\r\n                                    <li><a href=\"#\" className=\"grey-text text-lighten-3\">Instagram</a></li>\r\n                                    <li><a href=\"#\" className=\"grey-text text-lighten-3\">Twitter</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"footer-copyright grey darken-4\">\r\n                        <div className=\"container center-align\">&copy; 2020 Chisom Julius</div>\r\n                    </div>\r\n                </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":61,"column":25,"nodeType":"66","endLine":61,"endColumn":99},{"ruleId":"67","severity":1,"message":"68","line":3,"column":15,"nodeType":"69","messageId":"70","endLine":3,"endColumn":22},{"ruleId":"64","severity":1,"message":"65","line":61,"column":25,"nodeType":"66","endLine":61,"endColumn":99},{"ruleId":"60","replacedBy":"71"},{"ruleId":"62","replacedBy":"72"},{"ruleId":"67","severity":1,"message":"68","line":3,"column":15,"nodeType":"69","messageId":"70","endLine":3,"endColumn":22},{"ruleId":"64","severity":1,"message":"65","line":59,"column":25,"nodeType":"66","endLine":59,"endColumn":99},{"ruleId":"73","severity":1,"message":"74","line":17,"column":41,"nodeType":"66","endLine":17,"endColumn":90},{"ruleId":"73","severity":1,"message":"74","line":18,"column":41,"nodeType":"66","endLine":18,"endColumn":90},{"ruleId":"73","severity":1,"message":"74","line":19,"column":41,"nodeType":"66","endLine":19,"endColumn":90},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar",["75"],["76"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]